I wrote at least one right solution for every question(gurantee right), might has other solutions. 
Note: Some questions I've already got full points,but I still wrote right answers for them in case I lost 
the paper version of the quiz and exam.

1. Scenarios: Quicksort of a permutation of the numbers in the set{8,1,6,7,2,9,4}
Worse case: 9876421 or 1246789
Corresponding BST: lean to only one side.
			9
	       /
	      8
	     /
        7
       / 
      6
     /
    4
   /
  2
 /
1
Time complexity: O(n*n)

Best Case: 6214879
Corresponding BST: 
		6
	  /   \
	 2     8
 	/ \   / \
   1   4 7   9
Time complexity: O(n*logn)  
   
2. Scenarios: Do a binary search to query x in a sorted list. [1,2,4,6,7,8,9]
Worse case: 
input: 9
numbers visited: 6,8,9
Time complexity: O(logn)

Best case:
input: 6
numbers visited: 6
Time complexity: O(1)

3. Insertion sort can be done O(nlogn) using binary search + linkedlist?
   Since using binary search to find place to insert costs O(logn),using linked-list to insert costs O(1).

False. As we could not use binary search + linkedlist at the same time.
But we could solve it use Balanced BST,
             Search    Insert     Sum 
array        O(logn)    O(n)      O(n*n)
Linkedlist   O(n)       O(1)      O(n*n)
Balanced BST O(logn)    O(logn)   O(n*logn)

   



